- content_for :title do
  = @title

- my_loves = @loves[@rating.id]

header.m--hero
  .js-headerAnim.m--header-image style="#{"background-image: url(#{@movie.decorate.get_background_image})"}"

.m--body
  section.m--wrapper.rating data-id=@rating.id

    header.m--header
      p.movie__subheader

        em.readable=' t('semantics.about')
        span= link_to @movie.title, @movie

      - if @rating.short_review
        h1.readable
          | &#8220;
          = @rating.short_review
          | &#8221;

      span.rf--user

        = link_to image_tag(@rating.user.medium_avatar, class: 'circle'), @rating.user
        = link_to @rating.user.name, @rating.user, class: 'rf--user-name caps text--inverse'

        span.rf--stats

          i.ion-android-star.clr-4
          = @rating.value

      - if current_user

        span.r--actions

          = link_to "#replyForm" do
            i.ion-reply

          span.js-love


            - if @loves && @loves[@rating.id] && active_love = @loves[@rating.id].detect { |love| love.user_id == current_user.id }

              = link_to lofe_path(active_love), method: :delete, remote: true do

                i.ion-heart.clr-2

            - else
              = link_to loves_path(lovable_type: "Rating", lovable_id: @rating.id), method: :post, remote: true do

                i.ion-heart



          = link_to "#", class: "js-share-rating" do
            i.ion-social-facebook

          = link_to share_twitter_url(t('social.twitter_rating', rating: @rating.short_review, user: @rating.user.name, url: @actual_url)) do
            i.ion-social-twitter


        article.list-of-lovers

          - my_loves = @loves[@rating.id]

          - if my_loves

            span.lovers-count
              span.caps Loves
              strong = my_loves.count

            ul.js-media__lovers

              - my_loves.reverse_each do |love|

                li = link_to(image_tag(love.user.avatar("small")),love.user, class: "love-user-#{love.user.id}")


      - else
        = render "shared/social_login"

    article
      = render "comments/index", commentable: @rating

javascript:

  $(function () {
      $('a[href*=#]:not([href=#])').click(function () {
          if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {

              var target = $(this.hash);
              target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
              if (target.length) {
                  $('html,body').animate({
                      scrollTop: target.offset().top
                  }, 300, function(){ // function to focus here
                      $('.js-comment-wrapper').find("textarea").focus();
                  });
                  return false;
              }
          }
      });
  });

  $("a.js-share-rating").on("click", function (){
    FB.ui({
      method: 'feed',
      link: '#{@actual_url}',
      name: '#{@fb_title}',
      picture: '#{@movie.decorate.get_poster_image}',
      description: '#{@description}'
    }, function(response){});
  });

- content_for :custom_meta do
  meta property="og:title" content=@fb_title
  meta property="og:image" content=@movie.decorate.get_poster_image
  meta property="og:description" content=@description
